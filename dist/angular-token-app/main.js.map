{"version":3,"sources":["webpack:///./projects/angular-token/src/lib/angular-token.interceptor.ts","webpack:///./projects/angular-token/src/lib/angular-token.module.ts","webpack:///./projects/angular-token/src/lib/angular-token.service.ts","webpack:///./projects/angular-token/src/lib/angular-token.token.ts","webpack:///./projects/angular-token/src/public_api.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/example/access-resource/access-resource.component.html","webpack:///./src/app/example/access-resource/access-resource.component.ts","webpack:///./src/app/example/can-activate/can-activate.component.html","webpack:///./src/app/example/can-activate/can-activate.component.ts","webpack:///./src/app/example/change-password/change-password.component.html","webpack:///./src/app/example/change-password/change-password.component.ts","webpack:///./src/app/example/example.component.html","webpack:///./src/app/example/example.component.scss","webpack:///./src/app/example/example.component.ts","webpack:///./src/app/example/example.module.ts","webpack:///./src/app/example/output/output.component.html","webpack:///./src/app/example/output/output.component.scss","webpack:///./src/app/example/output/output.component.ts","webpack:///./src/app/example/register/register.component.html","webpack:///./src/app/example/register/register.component.ts","webpack:///./src/app/example/sign-in/sign-in.component.html","webpack:///./src/app/example/sign-in/sign-in.component.ts","webpack:///./src/app/example/sign-out/sign-out.component.html","webpack:///./src/app/example/sign-out/sign-out.component.ts","webpack:///./src/app/example/validate-token/validate-token.component.html","webpack:///./src/app/example/validate-token/validate-token.component.ts","webpack:///./src/app/fake-backend.ts","webpack:///./src/app/restricted/restricted.component.html","webpack:///./src/app/restricted/restricted.component.ts","webpack:///./src/app/restricted/restricted.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpInterceptor, HttpHandler, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { AngularTokenService } from './angular-token.service';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AngularTokenInterceptor implements HttpInterceptor {\n\n  constructor( private tokenService: AngularTokenService ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    // Get auth data from local storage\n    this.tokenService.getAuthDataFromStorage();\n\n    // Add the headers if the request is going to the configured server\n    const authData = this.tokenService.authData.value;\n\n    if (authData &&\n      (this.tokenService.tokenOptions.apiBase === null || req.url.match(this.tokenService.tokenOptions.apiBase))) {\n\n      const headers = {\n        'access-token': authData.accessToken,\n        'client':       authData.client,\n        'expiry':       authData.expiry,\n        'token-type':   authData.tokenType,\n        'uid':          authData.uid\n      };\n\n      req = req.clone({\n        setHeaders: headers\n      });\n    }\n\n    return next.handle(req).pipe(tap(\n        res => this.handleResponse(res),\n        err => this.handleResponse(err)\n    ));\n  }\n\n\n  // Parse Auth data from response\n  private handleResponse(res: HttpResponse<any> | HttpErrorResponse | HttpEvent<any>): void {\n    if (res instanceof HttpResponse || res instanceof HttpErrorResponse) {\n      if (this.tokenService.tokenOptions.apiBase === null || (res.url && res.url.match(this.tokenService.tokenOptions.apiBase))) {\n        this.tokenService.getAuthHeadersFromResponse(res);\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AngularTokenOptions } from './angular-token.model';\nimport { AngularTokenService } from './angular-token.service';\nimport { AngularTokenInterceptor } from './angular-token.interceptor';\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nexport * from './angular-token.service';\n\n@NgModule()\nexport class AngularTokenModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: AngularTokenModule) {\n    if (parentModule) {\n      throw new Error('AngularToken is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(options: AngularTokenOptions): ModuleWithProviders {\n    return {\n      ngModule: AngularTokenModule,\n      providers: [\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: AngularTokenInterceptor,\n          multi: true\n        },\n        options.angularTokenOptionsProvider ||\n        {\n          provide: ANGULAR_TOKEN_OPTIONS,\n          useValue: options\n        },\n        AngularTokenService\n      ]\n    };\n  }\n}\n","import { Injectable, Optional, Inject, PLATFORM_ID } from '@angular/core';\nimport { ActivatedRoute, Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, fromEvent, interval, BehaviorSubject } from 'rxjs';\nimport { pluck, filter, share, finalize } from 'rxjs/operators';\n\nimport { ANGULAR_TOKEN_OPTIONS } from './angular-token.token';\n\nimport {\n  SignInData,\n  RegisterData,\n  UpdatePasswordData,\n  ResetPasswordData,\n\n  UserType,\n  UserData,\n  AuthData,\n  ApiResponse,\n\n  AngularTokenOptions,\n\n  TokenPlatform,\n  TokenInAppBrowser,\n} from './angular-token.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AngularTokenService implements CanActivate {\n\n  get currentUserType(): string {\n    if (this.userType.value != null) {\n      return this.userType.value.name;\n    } else {\n      return undefined;\n    }\n  }\n\n  get currentUserData(): UserData {\n    return this.userData.value;\n  }\n\n  get currentAuthData(): AuthData {\n    return this.authData.value;\n  }\n\n  get apiBase(): string {\n    console.warn('[angular-token] The attribute .apiBase will be removed in the next major release, please use' +\n    '.tokenOptions.apiBase instead');\n    return this.options.apiBase;\n  }\n\n  get tokenOptions(): AngularTokenOptions {\n    return this.options;\n  }\n\n  set tokenOptions(options: AngularTokenOptions) {\n    this.options = (<any>Object).assign(this.options, options);\n  }\n\n  private options: AngularTokenOptions;\n  public userType: BehaviorSubject<UserType> = new BehaviorSubject<UserType>(null);\n  public authData: BehaviorSubject<AuthData> = new BehaviorSubject<AuthData>(null);\n  public userData: BehaviorSubject<UserData> = new BehaviorSubject<UserData>(null);\n  private global: Window | any;\n\n  private localStorage: Storage | any = {};\n\n  constructor(\n    private http: HttpClient,\n    @Inject(ANGULAR_TOKEN_OPTIONS) config: any,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private activatedRoute: ActivatedRoute,\n    @Optional() private router: Router\n  ) {\n    this.global = (typeof window !== 'undefined') ? window : {};\n\n    if (isPlatformServer(this.platformId)) {\n\n      // Bad pratice, needs fixing\n      this.global = {\n        open: (): void => null,\n        location: {\n          href: '/',\n          origin: '/'\n        }\n      };\n\n      // Bad pratice, needs fixing\n      this.localStorage.setItem = (): void => null;\n      this.localStorage.getItem = (): void => null;\n      this.localStorage.removeItem = (): void => null;\n    } else {\n      this.localStorage = localStorage;\n    }\n\n    const defaultOptions: AngularTokenOptions = {\n      apiPath:                    null,\n      apiBase:                    null,\n\n      signInPath:                 'auth/sign_in',\n      signInRedirect:             null,\n      signInStoredUrlStorageKey:  null,\n\n      signOutPath:                'auth/sign_out',\n      validateTokenPath:          'auth/validate_token',\n      signOutFailedValidate:      false,\n\n      registerAccountPath:        'auth',\n      deleteAccountPath:          'auth',\n      registerAccountCallback:    this.global.location.href,\n\n      updatePasswordPath:         'auth',\n\n      resetPasswordPath:          'auth/password',\n      resetPasswordCallback:      this.global.location.href,\n\n      userTypes:                  null,\n      loginField:                 'email',\n\n      oAuthBase:                  this.global.location.origin,\n      oAuthPaths: {\n        github:                   'auth/github'\n      },\n      oAuthCallbackPath:          'oauth_callback',\n      oAuthWindowType:            'newWindow',\n      oAuthWindowOptions:         null,\n\n      oAuthBrowserCallbacks: {\n        github:                   'auth/github/callback',\n      },\n    };\n\n    const mergedOptions = (<any>Object).assign(defaultOptions, config);\n    this.options = mergedOptions;\n\n    if (this.options.apiBase === null) {\n      console.warn(`[angular-token] You have not configured 'apiBase', which may result in security issues. ` +\n                   `Please refer to the documentation at https://github.com/neroniaky/angular-token/wiki`);\n    }\n\n    this.tryLoadAuthData();\n  }\n\n  userSignedIn(): boolean {\n    if (this.authData.value == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.userSignedIn()) {\n      return true;\n    } else {\n      // Store current location in storage (usefull for redirection after signing in)\n      if (this.options.signInStoredUrlStorageKey) {\n        this.localStorage.setItem(\n          this.options.signInStoredUrlStorageKey,\n          state.url\n        );\n      }\n\n      // Redirect user to sign in if signInRedirect is set\n      if (this.router && this.options.signInRedirect) {\n        this.router.navigate([this.options.signInRedirect]);\n      }\n\n      return false;\n    }\n  }\n\n\n  /**\n   *\n   * Actions\n   *\n   */\n\n  // Register request\n  registerAccount(registerData: RegisterData, additionalData?: any): Observable<ApiResponse> {\n\n    registerData = Object.assign({}, registerData);\n\n    if (registerData.userType == null) {\n      this.userType.next(null);\n    } else {\n      this.userType.next(this.getUserTypeByName(registerData.userType));\n      delete registerData.userType;\n    }\n\n    if (\n      registerData.password_confirmation == null &&\n      registerData.passwordConfirmation != null\n    ) {\n      registerData.password_confirmation = registerData.passwordConfirmation;\n      delete registerData.passwordConfirmation;\n    }\n\n    if (additionalData !== undefined) {\n      registerData.additionalData = additionalData;\n    }\n\n    const login = registerData.login;\n    delete registerData.login;\n    registerData[this.options.loginField] = login;\n\n    registerData.confirm_success_url = this.options.registerAccountCallback;\n\n    return this.http.post<ApiResponse>(\n      this.getServerPath() + this.options.registerAccountPath, registerData\n    );\n  }\n\n  // Delete Account\n  deleteAccount(): Observable<ApiResponse> {\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.deleteAccountPath);\n  }\n\n  // Sign in request and set storage\n  signIn(signInData: SignInData, additionalData?: any): Observable<ApiResponse> {\n    this.userType.next((signInData.userType == null) ? null : this.getUserTypeByName(signInData.userType));\n\n    const body = {\n      [this.options.loginField]: signInData.login,\n      password: signInData.password\n    };\n\n    if (additionalData !== undefined) {\n      body.additionalData = additionalData;\n    }\n\n    const observ = this.http.post<ApiResponse>(\n      this.getServerPath() + this.options.signInPath, body\n    ).pipe(share());\n\n    observ.subscribe(res => this.userData.next(res.data));\n\n    return observ;\n  }\n\n  signInOAuth(oAuthType: string, inAppBrowser?: TokenInAppBrowser<any, any>, platform?: TokenPlatform) {\n\n    const oAuthPath: string = this.getOAuthPath(oAuthType);\n    const callbackUrl = `${this.global.location.origin}/${this.options.oAuthCallbackPath}`;\n    const oAuthWindowType: string = this.options.oAuthWindowType;\n    const authUrl: string = this.getOAuthUrl(oAuthPath, callbackUrl, oAuthWindowType);\n\n    if (oAuthWindowType === 'newWindow' ||\n      (oAuthWindowType == 'inAppBrowser' && (!platform || !platform.is('cordova') || !(platform.is('ios') || platform.is('android'))))) {\n      const oAuthWindowOptions = this.options.oAuthWindowOptions;\n      let windowOptions = '';\n\n      if (oAuthWindowOptions) {\n        for (const key in oAuthWindowOptions) {\n          if (oAuthWindowOptions.hasOwnProperty(key)) {\n              windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\n          }\n        }\n      }\n\n      const popup = window.open(\n          authUrl,\n          '_blank',\n          `closebuttoncaption=Cancel${windowOptions}`\n      );\n      return this.requestCredentialsViaPostMessage(popup);\n    } else if (oAuthWindowType == 'inAppBrowser') {\n      let oAuthBrowserCallback = this.options.oAuthBrowserCallbacks[oAuthType];\n      if (!oAuthBrowserCallback) {\n        throw new Error(`To login with oAuth provider ${oAuthType} using inAppBrowser the callback (in oAuthBrowserCallbacks) is required.`);\n      }\n      // let oAuthWindowOptions = this.options.oAuthWindowOptions;\n      // let windowOptions = '';\n\n      //  if (oAuthWindowOptions) {\n      //     for (let key in oAuthWindowOptions) {\n      //         windowOptions += `,${key}=${oAuthWindowOptions[key]}`;\n      //     }\n      // }\n\n      let browser = inAppBrowser.create(\n          authUrl,\n          '_blank',\n          'location=no'\n      );\n\n      return new Observable((observer) => {\n        browser.on('loadstop').subscribe((ev: any) => {\n          if (ev.url.indexOf(oAuthBrowserCallback) > -1) {\n            browser.executeScript({code: \"requestCredentials();\"}).then((credentials: any) => {\n              this.getAuthDataFromPostMessage(credentials[0]);\n\n              let pollerObserv = interval(400);\n\n              let pollerSubscription = pollerObserv.subscribe(() => {\n                if (this.userSignedIn()) {\n                  observer.next(this.authData);\n                  observer.complete();\n\n                  pollerSubscription.unsubscribe();\n                  browser.close();\n                }\n              }, (error: any) => {\n                observer.error(error);\n                observer.complete();\n             });\n            }, (error: any) => {\n              observer.error(error);\n              observer.complete();\n           });\n          }\n        }, (error: any) => {\n          observer.error(error);\n          observer.complete();\n        });\n      })\n    } else if (oAuthWindowType === 'sameWindow') {\n      this.global.location.href = authUrl;\n      return undefined;\n    } else {\n      throw new Error(`Unsupported oAuthWindowType \"${oAuthWindowType}\"`);\n    }\n  }\n\n  processOAuthCallback(): void {\n    this.getAuthDataFromParams();\n  }\n\n  // Sign out request and delete storage\n  signOut(): Observable<ApiResponse> {\n    return this.http.delete<ApiResponse>(this.getServerPath() + this.options.signOutPath)\n      // Only remove the localStorage and clear the data after the call\n      .pipe(\n        finalize(() => {\n            this.localStorage.removeItem('accessToken');\n            this.localStorage.removeItem('client');\n            this.localStorage.removeItem('expiry');\n            this.localStorage.removeItem('tokenType');\n            this.localStorage.removeItem('uid');\n\n            this.authData.next(null);\n            this.userType.next(null);\n            this.userData.next(null);\n          }\n        )\n      );\n  }\n\n  // Validate token request\n  validateToken(): Observable<ApiResponse> {\n    const observ = this.http.get<ApiResponse>(\n      this.getServerPath() + this.options.validateTokenPath\n    ).pipe(share());\n\n    observ.subscribe(\n      (res) => this.userData.next(res.data),\n      (error) => {\n        if (error.status === 401 && this.options.signOutFailedValidate) {\n          this.signOut();\n        }\n    });\n\n    return observ;\n  }\n\n  // Update password request\n  updatePassword(updatePasswordData: UpdatePasswordData): Observable<ApiResponse> {\n\n    if (updatePasswordData.userType != null) {\n      this.userType.next(this.getUserTypeByName(updatePasswordData.userType));\n    }\n\n    let args: any;\n\n    if (updatePasswordData.passwordCurrent == null) {\n      args = {\n        password:               updatePasswordData.password,\n        password_confirmation:  updatePasswordData.passwordConfirmation\n      };\n    } else {\n      args = {\n        current_password:       updatePasswordData.passwordCurrent,\n        password:               updatePasswordData.password,\n        password_confirmation:  updatePasswordData.passwordConfirmation\n      };\n    }\n\n    if (updatePasswordData.resetPasswordToken) {\n      this.tryLoadAuthData();\n    }\n\n    const body = args;\n    return this.http.put<ApiResponse>(this.getServerPath() + this.options.updatePasswordPath, body);\n  }\n\n  // Reset password request\n  resetPassword(resetPasswordData: ResetPasswordData): Observable<ApiResponse> {\n\n    this.userType.next(\n      (resetPasswordData.userType == null) ? null : this.getUserTypeByName(resetPasswordData.userType)\n    );\n\n    const body = {\n      [this.options.loginField]: resetPasswordData.login,\n      redirect_url: this.options.resetPasswordCallback\n    };\n\n    return this.http.post<ApiResponse>(this.getServerPath() + this.options.resetPasswordPath, body);\n  }\n\n\n  /**\n   *\n   * Construct Paths / Urls\n   *\n   */\n\n  private getUserPath(): string {\n    return (this.userType.value == null) ? '' : this.userType.value.path + '/';\n  }\n\n  private getApiPath(): string {\n    let constructedPath = '';\n\n    if (this.options.apiBase != null) {\n      constructedPath += this.options.apiBase + '/';\n    }\n\n    if (this.options.apiPath != null) {\n      constructedPath += this.options.apiPath + '/';\n    }\n\n    return constructedPath;\n  }\n\n  private getServerPath(): string {\n    return this.getApiPath() + this.getUserPath();\n  }\n\n  private getOAuthPath(oAuthType: string): string {\n    let oAuthPath: string;\n\n    oAuthPath = this.options.oAuthPaths[oAuthType];\n\n    if (oAuthPath == null) {\n      oAuthPath = `/auth/${oAuthType}`;\n    }\n\n    return oAuthPath;\n  }\n\n  private getOAuthUrl(oAuthPath: string, callbackUrl: string, windowType: string): string {\n    let url: string;\n\n    url =   `${this.options.oAuthBase}/${oAuthPath}`;\n    url +=  `?omniauth_window_type=${windowType}`;\n    url +=  `&auth_origin_url=${encodeURIComponent(callbackUrl)}`;\n\n    if (this.userType.value != null) {\n      url += `&resource_class=${this.userType.value.name}`;\n    }\n\n    return url;\n  }\n\n\n  /**\n   *\n   * Get Auth Data\n   *\n   */\n\n  // Try to load auth data\n  private tryLoadAuthData(): void {\n\n    const userType = this.getUserTypeByName(this.localStorage.getItem('userType'));\n\n    if (userType) {\n      this.userType.next(userType);\n    }\n\n    this.getAuthDataFromStorage();\n\n    if (this.activatedRoute) {\n      this.getAuthDataFromParams();\n    }\n\n    // if (this.authData) {\n    //     this.validateToken();\n    // }\n  }\n\n  // Parse Auth data from response\n  public getAuthHeadersFromResponse(data: HttpResponse<any> | HttpErrorResponse): void {\n    const headers = data.headers;\n\n    const authData: AuthData = {\n      accessToken:    headers.get('access-token'),\n      client:         headers.get('client'),\n      expiry:         headers.get('expiry'),\n      tokenType:      headers.get('token-type'),\n      uid:            headers.get('uid')\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Parse Auth data from post message\n  private getAuthDataFromPostMessage(data: any): void {\n    const authData: AuthData = {\n      accessToken:    data['auth_token'],\n      client:         data['client_id'],\n      expiry:         data['expiry'],\n      tokenType:      'Bearer',\n      uid:            data['uid']\n    };\n\n    this.setAuthData(authData);\n  }\n\n  // Try to get auth data from storage.\n  public getAuthDataFromStorage(): void {\n\n    const authData: AuthData = {\n      accessToken:    this.localStorage.getItem('accessToken'),\n      client:         this.localStorage.getItem('client'),\n      expiry:         this.localStorage.getItem('expiry'),\n      tokenType:      this.localStorage.getItem('tokenType'),\n      uid:            this.localStorage.getItem('uid')\n    };\n\n    if (this.checkAuthData(authData)) {\n      this.authData.next(authData);\n    }\n  }\n\n  // Try to get auth data from url parameters.\n  private getAuthDataFromParams(): void {\n    this.activatedRoute.queryParams.subscribe(queryParams => {\n      const authData: AuthData = {\n        accessToken:    queryParams['token'] || queryParams['auth_token'],\n        client:         queryParams['client_id'],\n        expiry:         queryParams['expiry'],\n        tokenType:      'Bearer',\n        uid:            queryParams['uid']\n      };\n\n      if (this.checkAuthData(authData)) {\n        this.authData.next(authData);\n      }\n    });\n  }\n\n  /**\n   *\n   * Set Auth Data\n   *\n   */\n\n  // Write auth data to storage\n  private setAuthData(authData: AuthData): void {\n    if (this.checkAuthData(authData)) {\n\n      this.authData.next(authData);\n\n      this.localStorage.setItem('accessToken', authData.accessToken);\n      this.localStorage.setItem('client', authData.client);\n      this.localStorage.setItem('expiry', authData.expiry);\n      this.localStorage.setItem('tokenType', authData.tokenType);\n      this.localStorage.setItem('uid', authData.uid);\n\n      if (this.userType.value != null) {\n        this.localStorage.setItem('userType', this.userType.value.name);\n      }\n\n    }\n  }\n\n\n  /**\n   *\n   * Validate Auth Data\n   *\n   */\n\n  // Check if auth data complete and if response token is newer\n  private checkAuthData(authData: AuthData): boolean {\n\n    if (\n      authData.accessToken != null &&\n      authData.client != null &&\n      authData.expiry != null &&\n      authData.tokenType != null &&\n      authData.uid != null\n    ) {\n      if (this.authData.value != null) {\n        return authData.expiry >= this.authData.value.expiry;\n      }\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   *\n   * OAuth\n   *\n   */\n\n  private requestCredentialsViaPostMessage(authWindow: any): Observable<any> {\n    const pollerObserv = interval(500);\n\n    const responseObserv = fromEvent(this.global, 'message').pipe(\n      pluck('data'),\n      filter(this.oAuthWindowResponseFilter)\n    );\n\n    responseObserv.subscribe(\n      this.getAuthDataFromPostMessage.bind(this)\n    );\n\n    const pollerSubscription = pollerObserv.subscribe(() => {\n      if (authWindow.closed) {\n        pollerSubscription.unsubscribe();\n      } else {\n        authWindow.postMessage('requestCredentials', '*');\n      }\n    });\n\n    return responseObserv;\n  }\n\n  private oAuthWindowResponseFilter(data: any): any {\n    if (data.message === 'deliverCredentials' || data.message === 'authFailure') {\n      return data;\n    }\n  }\n\n\n  /**\n   *\n   * Utilities\n   *\n   */\n\n  // Match user config by user config name\n  private getUserTypeByName(name: string): UserType {\n    if (name == null || this.options.userTypes == null) {\n      return null;\n    }\n\n    return this.options.userTypes.find(\n      userType => userType.name === name\n    );\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const ANGULAR_TOKEN_OPTIONS = new InjectionToken('ANGULAR_TOKEN_OPTIONS');\n","export {\n  SignInData,\n  RegisterData,\n  UpdatePasswordData,\n  ResetPasswordData,\n\n  UserType,\n  UserData,\n  AuthData,\n  ApiResponse,\n\n  AngularTokenOptions\n} from './lib/angular-token.model';\n\nexport { ANGULAR_TOKEN_OPTIONS } from './lib/angular-token.token';\n\nexport { AngularTokenService } from './lib/angular-token.service';\n\nexport { AngularTokenModule } from './lib/angular-token.module';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"header title mat-elevation-z6\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n          <a>Angular-Token Example</a>\\n          <a mat-stroked-button href=\\\"https://github.com/neroniaky/angular-token\\\">\\n            <mat-icon>assignment</mat-icon>\\n            View on Github\\n          </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"header current-user mat-elevation-z6\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"row current-user\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <p class=\\\"title\\\">Current User Status</p>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <p>Signed In?: <code>{{tokenService.userSignedIn()}}</code></p>\\n          </div>\\n          <div class=\\\"col-md-3\\\" *ngIf=\\\"tokenService.currentUserData\\\">\\n            <p>Email: <code>{{tokenService.currentUserData.email}}</code></p>\\n          </div>\\n          <div class=\\\"col-md-3\\\"*ngIf=\\\"tokenService.currentUserType\\\">\\n            <p>UserType: <code>{{tokenService.currentUserType}}</code></p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container header-text\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n      <p>\\n        This is an example for Angular-Token. Angular-Token is a token based authentication service for Angular with multiple user support. It works best with the devise token auth gem for Rails.\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\"","module.exports = \".header {\\n  position: fixed;\\n  left: 0;\\n  width: 100%; }\\n  .header.title {\\n    color: white;\\n    z-index: 999;\\n    background-color: #3f51b5;\\n    top: 0;\\n    height: 60px; }\\n  .header.title .col {\\n      display: flex;\\n      height: 60px; }\\n  .header.title .col a {\\n        font-size: 14px;\\n        font-weight: 500;\\n        margin-top: auto;\\n        margin-bottom: auto; }\\n  .header.title .col a.mat-stroked-button {\\n          margin-left: auto; }\\n  .header.current-user {\\n    z-index: 998;\\n    top: 60px;\\n    background-color: #333;\\n    padding-top: 10px;\\n    padding-bottom: 10px; }\\n  .header.current-user p {\\n      color: #999;\\n      font-size: 14px;\\n      line-height: 24px;\\n      -webkit-margin-before: 0;\\n              margin-block-start: 0;\\n      -webkit-margin-after: 0;\\n              margin-block-end: 0; }\\n  .header.current-user p.title {\\n        color: white; }\\n  .header-text {\\n  padding-top: 140px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NvbG0vUnVieW1pbmVQcm9qZWN0cy9hbmd1bGFyMi10b2tlbi9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7RUFDZixPQUFPO0VBQ1AsV0FBVyxFQUFBO0VBSGI7SUFNSSxZQUFZO0lBQ1osWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixNQUFNO0lBQ04sWUFBWSxFQUFBO0VBVmhCO01BYU0sYUFBYTtNQUNiLFlBQVksRUFBQTtFQWRsQjtRQWlCUSxlQUFlO1FBQ2YsZ0JBQWdCO1FBQ2hCLGdCQUFnQjtRQUNoQixtQkFBbUIsRUFBQTtFQXBCM0I7VUF1QlUsaUJBQWlCLEVBQUE7RUF2QjNCO0lBOEJJLFlBQVk7SUFDWixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGlCQUFpQjtJQUNqQixvQkFBb0IsRUFBQTtFQWxDeEI7TUFxQ00sV0FBVztNQUNYLGVBQWU7TUFDZixpQkFBaUI7TUFDakIsd0JBQXFCO2NBQXJCLHFCQUFxQjtNQUNyQix1QkFBbUI7Y0FBbkIsbUJBQW1CLEVBQUE7RUF6Q3pCO1FBNENRLFlBQVksRUFBQTtFQU1wQjtFQUNFLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgJi50aXRsZSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Y1MWI1O1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDYwcHg7XG5cbiAgICAuY29sIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBoZWlnaHQ6IDYwcHg7XG5cbiAgICAgIGEge1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgIG1hcmdpbi10b3A6IGF1dG87XG4gICAgICAgIG1hcmdpbi1ib3R0b206IGF1dG87XG5cbiAgICAgICAgJi5tYXQtc3Ryb2tlZC1idXR0b24ge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi5jdXJyZW50LXVzZXIge1xuICAgIHotaW5kZXg6IDk5ODtcbiAgICB0b3A6IDYwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcblxuICAgIHAge1xuICAgICAgY29sb3I6ICM5OTk7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgIG1hcmdpbi1ibG9jay1zdGFydDogMDtcbiAgICAgIG1hcmdpbi1ibG9jay1lbmQ6IDA7XG5cbiAgICAgICYudGl0bGUge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5oZWFkZXItdGV4dCB7XG4gIHBhZGRpbmctdG9wOiAxNDBweDtcbn1cbiJdfQ== */\"","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { AngularTokenService } from '../../projects/angular-token/src/public_api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  constructor(public tokenService: AngularTokenService) { }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { AngularTokenModule } from '../../projects/angular-token/src/public_api';\n\nimport { AppComponent } from './app.component';\nimport { ExampleModule } from './example/example.module';\nimport { RestrictedModule } from './restricted/restricted.module';\nimport { routes } from './app.routes';\nimport { fakeBackendProvider } from './fake-backend';\n\n@NgModule({\n  imports: [\n    routes,\n    BrowserModule,\n    HttpClientModule,\n\n    ExampleModule,\n    RestrictedModule,\n\n    AngularTokenModule.forRoot({\n      // Change to your local dev environment example: 'http://localhost:3000'\n      apiBase: 'https://mock-api-server',\n    }),\n\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatToolbarModule\n  ],\n  providers: [\n    AngularTokenModule,\n    fakeBackendProvider\n  ],\n  declarations: [ AppComponent ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { AngularTokenService } from '../../projects/angular-token/src/public_api';\n\nimport { ExampleComponent } from './example/example.component';\nimport { RestrictedComponent } from './restricted/restricted.component';\n\nconst routerConfig: Routes = [\n  { path: '', component: ExampleComponent },\n  { path: 'restricted', component: RestrictedComponent, canActivate: [AngularTokenService] }\n];\n\nexport const routes = RouterModule.forRoot(routerConfig);\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-title>\\n\\t\\t\\t<mat-icon color=\\\"primary\\\">lock</mat-icon>\\n\\t\\t\\tAccess Private Resource\\n\\t\\t</mat-card-title>\\n\\t\\t<mat-card-subtitle>\\n\\t\\t\\tTry to access a private Rescource\\n\\t\\t</mat-card-subtitle>\\n\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<form #accessResourceForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\tmat-raised-button\\n\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\n\\t\\t\\t\\t\\ttype=\\\"submit\\\">\\n\\t\\t\\t\\t\\tAccess Private Resource\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div class=\\\"col-md-6\\\">\\n\\t<app-output [response]=\\\"output\\\"></app-output>\\n</div>\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularTokenService } from '../../../../projects/angular-token/src/public_api';\n\n@Component({\n  selector: 'app-access-resource',\n  templateUrl: 'access-resource.component.html'\n})\nexport class AccessResourceComponent {\n\n  output: any;\n\n  constructor(\n    private tokenService: AngularTokenService,\n    private http: HttpClient\n  ) { }\n\n  // Submit Data to Backend\n  onSubmit() {\n\n    this.output = null;\n\n    this.http.get(this.tokenService.tokenOptions.apiBase + '/private_resource').subscribe(\n      res => this.output      = res,\n      error => this.output    = error\n    );\n  }\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-title>\\n\\t\\t\\t<mat-icon color=\\\"primary\\\">lock</mat-icon>\\n\\t\\t\\tAccess Private Route\\n\\t\\t</mat-card-title>\\n\\t\\t<mat-card-subtitle>\\n\\t\\t\\tTry to access a private route\\n\\t\\t</mat-card-subtitle>\\n\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/restricted\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\tAccess Private Route\\n\\t\\t\\t</a>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-can-activate',\n  templateUrl: 'can-activate.component.html'\n})\nexport class CanActivateComponent {\n  constructor() { }\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-title>\\n\\t\\t\\t<mat-icon color=\\\"primary\\\">vpn_key</mat-icon>\\n\\t\\t\\tUpdate Password\\n\\t\\t</mat-card-title>\\n\\t\\t<mat-card-subtitle>\\n\\t\\t\\tUpdate the password of the currently signed in user\\n\\t\\t</mat-card-subtitle>\\n\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<form #changePasswordForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"Current Password\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"updatePasswordData.passwordCurrent\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"current-password\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"New Password\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"updatePasswordData.password\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"password\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"New Password Confirmation\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"updatePasswordData.passwordConfirmation\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"password-confirmation\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\tmat-raised-button\\n\\t\\t\\t\\t\\ttype=\\\"submit\\\"\\n\\t\\t\\t\\t\\t[disabled]=\\\"!changePasswordForm.form.valid\\\">\\n\\t\\t\\t\\t\\tUpdate Password\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div class=\\\"col-md-6\\\">\\n\\t<app-output [response]=\\\"output\\\"></app-output>\\n</div>\"","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport {\n  AngularTokenService,\n  UpdatePasswordData,\n  ApiResponse\n} from '../../../../projects/angular-token/src/public_api';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: 'change-password.component.html'\n})\nexport class ChangePasswordComponent {\n\n  @ViewChild('changePasswordForm') changePasswordForm: NgForm;\n\n  updatePasswordData: UpdatePasswordData = <UpdatePasswordData>{};\n  output: ApiResponse;\n\n  constructor(private tokenService: AngularTokenService) { }\n\n  // Submit Data to Backend\n  onSubmit() {\n\n    this.output = null;\n\n    this.tokenService.updatePassword(this.updatePasswordData).subscribe(\n      res => {\n        this.output = res;\n        this.changePasswordForm.resetForm();\n      }, error => {\n        this.output = error;\n        this.changePasswordForm.resetForm();\n      }\n    );\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <app-register class=\\\"row\\\"></app-register>\\n</div>\\n\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"container\\\">\\n  <app-sign-in class=\\\"row\\\"></app-sign-in>\\n</div>\\n\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"container\\\">\\n  <app-access-resource class=\\\"row\\\"></app-access-resource>\\n</div>\\n\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"container\\\">\\n  <app-can-activate class=\\\"row\\\"></app-can-activate>\\n</div>\\n\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"container\\\">\\n  <app-change-password class=\\\"row\\\"></app-change-password>\\n</div>\\n\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"container\\\">\\n  <app-validate-token class=\\\"row\\\"></app-validate-token>\\n</div>\\n\\n<mat-divider></mat-divider>\\n\\n<div class=\\\"container\\\">\\n  <app-sign-out class=\\\"row\\\"></app-sign-out>\\n</div>\\n\"","module.exports = \"mat-card {\\n  background-color: #eee; }\\n\\n.row {\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  margin-top: 20px;\\n  margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NvbG0vUnVieW1pbmVQcm9qZWN0cy9hbmd1bGFyMi10b2tlbi9zcmMvYXBwL2V4YW1wbGUvZXhhbXBsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLGlCQUFpQjtFQUNqQixvQkFBb0I7RUFDcEIsZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZXhhbXBsZS9leGFtcGxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xufVxuXG4ucm93IHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufSJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: 'example.component.html',\n  styleUrls: ['example.component.scss']\n})\nexport class ExampleComponent {\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ExampleComponent } from './example.component';\nimport { OutputComponent } from './output/output.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { AccessResourceComponent } from './access-resource/access-resource.component';\nimport { ValidateTokenComponent } from './validate-token/validate-token.component';\nimport { SignOutComponent } from './sign-out/sign-out.component';\nimport { CanActivateComponent } from './can-activate/can-activate.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatDividerModule\n  ],\n  declarations: [\n    ExampleComponent,\n    OutputComponent,\n    RegisterComponent,\n    SignInComponent,\n    ChangePasswordComponent,\n    SignOutComponent,\n    AccessResourceComponent,\n    ValidateTokenComponent,\n    CanActivateComponent\n  ],\n  exports: [\n    ExampleComponent\n  ]\n})\nexport class ExampleModule { }\n","module.exports = \"<mat-card>\\n\\n  <mat-card-title>Response</mat-card-title>\\n  <mat-card-subtitle>\\n    Display the reponse for the request\\n  </mat-card-subtitle>\\n\\n  <mat-card-footer>\\n\\n    <div *ngIf=\\\"response\\\">\\n      <div *ngIf=\\\"response.status != null\\\">\\n        <p>Status</p>\\n        <pre><code>{{response.status}}</code></pre>\\n      </div>\\n\\n      <div *ngIf=\\\"response.success != null\\\">\\n        <p>Success</p>\\n        <pre><code>{{response.success}}</code></pre>\\n      </div>\\n\\n      <div *ngIf=\\\"response.statusText != null\\\">\\n        <p>Status Text</p>\\n        <pre><code>{{response.statusText}}</code></pre>\\n      </div>\\n\\n      <div *ngIf=\\\"response.data\\\">\\n          <p>Data</p>\\n        <pre><code>{{response.data | json}}</code></pre>\\n      </div>\\n\\n      <div *ngIf=\\\"response.errors\\\">\\n        <p>Errors</p>\\n        <pre><code>{{response.errors | json}}</code></pre>\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!response\\\">\\n      <p class=\\\"empty-icon\\\"><mat-icon>block</mat-icon></p>\\n      <p class=\\\"empty-icon\\\">Nothing to display</p>\\n    </div>\\n  </mat-card-footer>\\n</mat-card>\"","module.exports = \":host {\\n  width: 100%; }\\n\\nmat-card {\\n  overflow: hidden; }\\n\\nmat-card mat-card-footer {\\n    background-color: #333;\\n    padding: 5px 20px;\\n    color: white; }\\n\\nmat-card mat-card-footer p {\\n      -webkit-margin-after: 3px;\\n              margin-block-end: 3px; }\\n\\nmat-card mat-card-footer pre {\\n      margin-top: 0; }\\n\\nmat-card mat-card-footer .empty-icon {\\n      color: #666;\\n      text-align: center;\\n      margin-bottom: 20px; }\\n\\nmat-card mat-card-footer .empty-icon mat-icon {\\n        height: 60px;\\n        width: 60px;\\n        font-size: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NvbG0vUnVieW1pbmVQcm9qZWN0cy9hbmd1bGFyMi10b2tlbi9zcmMvYXBwL2V4YW1wbGUvb3V0cHV0L291dHB1dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGdCQUFnQixFQUFBOztBQURsQjtJQUlJLHNCQUFzQjtJQUN0QixpQkFBaUI7SUFDakIsWUFBWSxFQUFBOztBQU5oQjtNQVNNLHlCQUFxQjtjQUFyQixxQkFBcUIsRUFBQTs7QUFUM0I7TUFhTSxhQUFhLEVBQUE7O0FBYm5CO01BaUJNLFdBQVc7TUFDWCxrQkFBa0I7TUFDbEIsbUJBQW1CLEVBQUE7O0FBbkJ6QjtRQXNCUSxZQUFZO1FBQ1osV0FBVztRQUNYLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2V4YW1wbGUvb3V0cHV0L291dHB1dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1jYXJkIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICBtYXQtY2FyZC1mb290ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gICAgcGFkZGluZzogNXB4IDIwcHg7XG4gICAgY29sb3I6IHdoaXRlO1xuXG4gICAgcCB7XG4gICAgICBtYXJnaW4tYmxvY2stZW5kOiAzcHg7XG4gICAgfVxuXG4gICAgcHJlIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgfVxuXG4gICAgLmVtcHR5LWljb24ge1xuICAgICAgY29sb3I6ICM2NjY7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuXG4gICAgICBtYXQtaWNvbiB7XG4gICAgICAgIGhlaWdodDogNjBweDtcbiAgICAgICAgd2lkdGg6IDYwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogNjBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iXX0= */\"","import { Component, Input } from '@angular/core';\nimport { ApiResponse} from '../../../../projects/angular-token/src/public_api';\n\n@Component({\n  selector: 'app-output',\n  templateUrl: 'output.component.html',\n  styleUrls: ['output.component.scss']\n})\nexport class OutputComponent {\n  @Input() response: ApiResponse;\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-title>\\n\\t\\t\\t<mat-icon color=\\\"primary\\\">account_circle</mat-icon>\\n\\t\\t\\tRegister\\n\\t\\t</mat-card-title>\\n\\t\\t<mat-card-subtitle>\\n\\t\\t\\tRegister a new Account\\n\\t\\t</mat-card-subtitle>\\n\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"Email\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"registerData.login\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"login\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"Password\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"registerData.password\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"password\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"Password Confirmation\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"registerData.passwordConfirmation\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"passwordConfirmation\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\tmat-raised-button\\n\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\n\\t\\t\\t\\t\\ttype=\\\"submit\\\"\\n\\t\\t\\t\\t\\t[disabled]=\\\"!registerForm.form.valid\\\">Register</button>\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div class=\\\"col-md-6\\\">\\n\\t<app-output [response]=\\\"output\\\"></app-output>\\n</div>\"","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {\n  AngularTokenService,\n  RegisterData,\n  ApiResponse\n} from '../../../../projects/angular-token/src/public_api';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: 'register.component.html'\n})\nexport class RegisterComponent {\n\n  @ViewChild('registerForm') registerForm: NgForm;\n\n  registerData: RegisterData = <RegisterData>{};\n  output: ApiResponse;\n\n  constructor(private tokenService: AngularTokenService) { }\n\n  // Submit Data to Backend\n  onSubmit() {\n\n    this.output = null;\n\n    this.tokenService.registerAccount(this.registerData).subscribe(\n      res => {\n        this.output = res;\n        this.registerForm.resetForm();\n      }, error => {\n        this.output = error;\n        this.registerForm.resetForm();\n      }\n    );\n  }\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-title>\\n\\t\\t\\t<mat-icon color=\\\"primary\\\">lock</mat-icon>\\n\\t\\t\\tSign In\\n\\t\\t</mat-card-title>\\n\\t\\t<mat-card-subtitle>\\n\\t\\t\\tSign into a previously registered Account\\n\\t\\t</mat-card-subtitle>\\n\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<form #signInForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"email\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"Email\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"signInData.login\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"email\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\tmatInput\\n\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\tplaceholder=\\\"Password\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"signInData.password\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"password\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\tmat-raised-button\\n\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\n\\t\\t\\t\\t\\ttype=\\\"submit\\\"\\n\\t\\t\\t\\t\\t[disabled]=\\\"!signInForm.form.valid\\\">Sign In</button>\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div class=\\\"col-md-6\\\">\\n\\t<app-output [response]=\\\"output\\\"></app-output>\\n</div>\"","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AngularTokenService, SignInData, ApiResponse } from '../../../../projects/angular-token/src/public_api';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: 'sign-in.component.html'\n})\nexport class SignInComponent {\n\n  @ViewChild('signInForm') signInForm: NgForm;\n\n  signInData: SignInData = <SignInData>{};\n  output: ApiResponse;\n\n  constructor(private tokenService: AngularTokenService) { }\n\n  // Submit Data to Backend\n  onSubmit() {\n\n    this.output = null;\n\n    this.tokenService.signIn(this.signInData).subscribe(\n      res => {\n        this.output = res;\n        this.signInForm.resetForm();\n      }, error => {\n        this.output = error;\n        this.signInForm.resetForm();\n      }\n    );\n  }\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-title>\\n\\t\\t\\t<mat-icon color=\\\"primary\\\">lock</mat-icon>\\n\\t\\t\\tSign Out\\n\\t\\t</mat-card-title>\\n\\t\\t<mat-card-subtitle>\\n\\t\\t\\tSign out current user\\n\\t\\t</mat-card-subtitle>\\n\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<form #signOutForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\tmat-raised-button\\n\\t\\t\\t\\t\\tcolor=\\\"primary\\\"\\n\\t\\t\\t\\t\\ttype=\\\"submit\\\">\\n\\t\\t\\t\\t\\tSign Out\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div class=\\\"col-md-6\\\">\\n\\t<app-output [response]=\\\"output\\\"></app-output>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { AngularTokenService } from '../../../../projects/angular-token/src/public_api';\n\n@Component({\n    selector: 'app-sign-out',\n    templateUrl: 'sign-out.component.html'\n})\nexport class SignOutComponent {\n\n  output: any;\n\n  constructor(private tokenService: AngularTokenService) { }\n\n  // Submit Data to Backend\n  onSubmit() {\n\n    this.output = null;\n\n    this.tokenService.signOut().subscribe(\n      res => this.output      = res,\n      error => this.output    = error\n    );\n  }\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-title>\\n\\t\\t\\t<mat-icon color=\\\"primary\\\">lock</mat-icon>\\n\\t\\t\\tValidate Token\\n\\t\\t</mat-card-title>\\n\\t\\t<mat-card-subtitle>\\n\\t\\t\\tValidate the current users token\\n\\t\\t</mat-card-subtitle>\\n\\n\\t\\t<mat-card-content>\\n\\t\\t\\t<form #validateTokenForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\tmat-raised-button\\n\\t\\t\\t\\t\\tcolor=\\\"primary\\\" \\n\\t\\t\\t\\t\\ttype=\\\"submit\\\">\\n\\t\\t\\t\\t\\tValidate Token\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\\n<div class=\\\"col-md-6\\\">\\n\\t<app-output [response]=\\\"output\\\"></app-output>\\n</div>\"","import { Component } from '@angular/core';\nimport { AngularTokenService } from '../../../../projects/angular-token/src/public_api';\n\n@Component({\n  selector: 'app-validate-token',\n  templateUrl: 'validate-token.component.html'\n})\nexport class ValidateTokenComponent {\n\n  output: any;\n\n  constructor(private tokenService: AngularTokenService) { }\n\n  // Submit Data to Backend\n  onSubmit() {\n\n    this.output = null;\n\n    this.tokenService.validateToken().subscribe(\n      res => this.output     = res,\n      error => this.output   = error\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n\n  users: any[];\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    // array in local storage for registered users\n    this.users = JSON.parse(localStorage.getItem('users')) || [];\n\n    // wrap in delayed observable to simulate server api call\n    return of(null).pipe(mergeMap(() => {\n\n      /*\n      *\n      * Register\n      *\n      */\n\n      if (request.url === 'https://mock-api-server/auth' && request.method === 'POST') {\n\n        // Get new user object from post body\n        const body = request.body;\n\n        // Check if all inputs provided\n        if (body.email === null && body.password === null && body.password_confirmation === null) {\n          return of(this.registerError(\n            body.email,\n            'Please submit proper sign up data in request body.'\n          ));\n        }\n\n        // Check if password matches password confimation\n        if (body.password !== body.password_confirmation) {\n          return of(this.registerError(\n            body.email,\n            { password_confirmation: ['does not match Password'] }\n          ));\n        }\n\n        // Check if login is email\n        const re = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\n        if (!re.test(body.email)) {\n          return of(this.registerError(\n            body.email,\n            { email: ['is not an email'] },\n          ));\n        }\n\n        // Check if login already exists\n        const duplicateUser = this.users.filter(user => {\n          return user.email === body.email;\n        }).length;\n\n        if (duplicateUser) {\n          return of(this.registerError(\n            body.email,\n            { email: ['has already been taken'] },\n          ));\n        }\n\n        const newUser = {\n          id: this.users.length + 1,\n          email: body.email,\n          password: body.password\n        };\n\n        this.users.push(newUser);\n        localStorage.setItem('users', JSON.stringify(this.users));\n\n        // respond 200 OK\n        return of(new HttpResponse<any>({\n          status: 200,\n          url: 'https://mock-api-server/auth',\n          body: {\n            status: 'success',\n            data: {\n              uid: body.email,\n              id: this.users.length + 1,\n              email: body.email,\n              provider: 'email',\n              name: null,\n              nickname: null,\n              image: null,\n              created_at: new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            }\n          }\n        }));\n      }\n\n      /*\n      *\n      * Sign In\n      *\n      */\n\n      if (request.url.match('https://mock-api-server/auth/sign_in') && request.method === 'POST') {\n\n        const filteredUsers = this.users.filter(user => {\n          return user.email === request.body.email && user.password === request.body.password;\n        });\n\n        if (filteredUsers.length) {\n          return of(new HttpResponse<any>({\n            headers: this.getHeaders(filteredUsers[0].email),\n            status: 200,\n            url: 'https://mock-api-server/auth/sign_in',\n            body:  {\n              data: {\n                id: filteredUsers[0].id,\n                email: filteredUsers[0].email,\n                provider: 'email',\n                uid: filteredUsers[0].email,\n                name: null,\n                nickname: null,\n                image: null\n              }\n            }\n          }));\n        } else {\n          // else return 400 bad request\n          return of(new HttpResponse<any>({\n            status: 401,\n            url: 'https://mock-api-server/auth/sign_in',\n            body: {\n              status: 'false',\n              errors: ['Invalid login credentials. Please try again.']\n            }\n          }));\n        }\n      }\n\n      /*\n      *\n      * Sign Out\n      *\n      */\n\n      if (request.url.match('https://mock-api-server/auth/sign_out') && request.method === 'DELETE') {\n        if (request.headers.get('access-token') === 'fake-access-token') {\n          return of(new HttpResponse<any>({\n            status: 200,\n            url: 'https://mock-api-server/auth/sign_out',\n            body: {\n              success: true\n            }\n          }));\n        } else {\n          return of(new HttpResponse<any>({\n            status: 404,\n            url: 'https://mock-api-server/auth/sign_out',\n            body: {\n              status: 'false',\n              errors: ['User was not found or was not logged in.']\n            }\n          }));\n        }\n      }\n\n      /*\n      *\n      * Validate Token\n      *\n      */\n\n      if (request.url.match('https://mock-api-server/auth/validate_token') && request.method === 'GET') {\n\n        const user = this.getAuthUser(request);\n\n        if (user) {\n          return of(new HttpResponse<any>({\n            headers: this.getHeaders(user.email),\n            status: 200,\n            url: 'https://mock-api-server/auth/validate_token',\n            body: {\n              success: true,\n              data: {\n                id: user.id,\n                provider: 'email',\n                uid: user.email,\n                name: null,\n                nickname: null,\n                image: null,\n                email: user.email\n              }\n            }\n          }));\n        } else {\n          return of(new HttpResponse<any>({\n            status: 401,\n            url: 'https://mock-api-server/auth/validate_token',\n            body: {\n              success: false,\n              errors: ['Invalid login credentials']\n            }\n          }));\n        }\n      }\n\n      /*\n      *\n      * Update Password\n      *\n      */\n\n      if (request.url.match('https://mock-api-server/auth') && request.method === 'PUT') {\n\n        // Check if password matches password confimation\n        if (request.body.password !== request.body.password_confirmation) {\n          return of(this.registerError(\n            request.body.email,\n            { password_confirmation: ['does not match Password'] }\n          ));\n        }\n\n        const user = this.getAuthUser(request);\n\n        if (user && user.password === request.body.password) {\n\n          this.users[(user.id - 1)].password = request.body.password;\n\n          localStorage.setItem('users', JSON.stringify(this.users));\n\n          return of(new HttpResponse<any>({\n            headers: this.getHeaders(user.email),\n            status: 200,\n            url: 'https://mock-api-server/auth',\n            body: {\n              status: 'success',\n              data: {\n                id: user.id,\n                email: user.email,\n                uid: user.email,\n                provider: 'email',\n                name: null,\n                nickname: null,\n                image: null,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n              }\n            }\n          }));\n        } else {\n          return of(new HttpResponse<any>({\n            status: 401,\n            url: 'https://mock-api-server/auth',\n            body: {\n              success: false,\n              errors: ['Invalid login credentials']\n            }\n          }));\n        }\n      }\n\n      /*\n      *\n      * Access Private Resouce\n      *\n      */\n\n      if (request.url.match('https://mock-api-server/private_resource') && request.method === 'GET') {\n\n        const user = this.getAuthUser(request);\n\n        if (user) {\n          return of(new HttpResponse<any>({\n            headers: this.getHeaders(user.email),\n            status: 200,\n            url: 'https://mock-api-server/auth/private_resource',\n            body: {\n              data: 'Private Content for ' + user.email\n            }\n          }));\n        } else {\n          return of(new HttpResponse<any>({\n            status: 401,\n            url: 'https://mock-api-server/auth/private_resource',\n            body: {\n              success: false,\n              errors: ['Invalid login credentials']\n            }\n          }));\n        }\n      }\n\n      // pass through any requests not handled above\n      return next.handle(request);\n    }))\n\n    // call materialize and dematerialize to ensure delay even if an\n    // error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n    .pipe(materialize())\n    .pipe(delay(500))\n    .pipe(dematerialize());\n  }\n\n  getAuthUser(request: HttpRequest<any>) {\n    const filteredUsers = this.users.filter(user => user.email === request.headers.get('uid'));\n\n    if (filteredUsers.length && request.headers.get('access-token') === 'fake-access-token') {\n      return filteredUsers[0];\n    } else {\n      return undefined;\n    }\n  }\n\n  getHeaders(uid: string): HttpHeaders {\n    const timestamp = String(Math.floor(Date.now() / 1000) + 600);\n\n    // if login details are valid return 200 OK with user details and fake jwt token\n    return new HttpHeaders({\n      'access-token': 'fake-access-token',\n      'client': 'fake-client-id',\n      'expiry': timestamp,\n      'token-type': 'Bearer',\n      'uid': uid\n    });\n  }\n\n  registerError(email: string, errorMsg?: {[key: string]: string[]} | string) {\n    return new HttpResponse<any>({\n      status: 422, url: 'https://mock-api-server/auth', body: {\n        status: 'error',\n        data: {\n          id: null,\n          provider: 'email',\n          uid: '',\n          name: null,\n          nickname: null,\n          image: null,\n          email: email,\n          created_at: null,\n          updated_at: null\n        },\n        errors: errorMsg\n      }\n    });\n  }\n}\n\nexport let fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: FakeBackendInterceptor,\n  multi: true\n};\n","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top: 50px;\\\">\\n  \\n  <mat-card>\\n    <mat-card-title>\\n      Restricted Site\\n    </mat-card-title>\\n\\n    <mat-card-content>\\n      <p>This Site is available for logged in users only.</p>\\n      <a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">\\n        Return\\n      </a>\\n    </mat-card-content>\\n  </mat-card>\\n\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-restricted',\n  templateUrl: 'restricted.component.html'\n})\nexport class RestrictedComponent { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { RestrictedComponent } from './restricted.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatCardModule\n  ],\n  declarations: [\n    RestrictedComponent\n  ],\n  exports: [\n    RestrictedComponent\n  ]\n})\nexport class RestrictedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}